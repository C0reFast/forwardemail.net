
extends ../../layout

mixin planRequired(isTeam = false, hasMarginBottom = true)
  if domain.plan === 'free'
    .alert.alert-warning.d-inline-block.text-center(class=hasMarginBottom ? '' : 'mb-0')!= t('Please <a class="alert-link" href="%s">upgrade to the %s plan</a> to unlock this feature.', l(`/my-account/domains/${domain.name}/billing?plan=${isTeam ? 'team' : 'enhanced_protection'}`), isTeam ? 'Team' : 'Enhanced Protection')

block body
  if domain.group === 'admin'
    #modal-invite.modal.fade(tabindex='-1', role='dialog', aria-labelledby='modal-invite-title', aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header.text-center.d-block
            h4.modal-title.d-inline-block.ml-4#modal-invite-title= t('Invite new team member')
            button(type='button', data-dismiss='modal', aria-label='Close').close
              span(aria-hidden='true') &times;
          .modal-body
            form.ajax-form.confirm-prompt(action=l(`/my-account/domains/${domain.name}/invites`), method="POST")
              input(type="hidden", name="_csrf", value=ctx.csrf)
              .form-group
                label(for="input-invite-email")= t('Email address')
                input#input-invite-email.form-control(required, autocomplete="off", name="email", type="email", placeholder='name@example.com')
              label= t('Group')
              .form-group
                .form-check.form-check-inline
                  input.form-check-input#input-invite-group-user(type='radio', name='group', value='user', checked)
                  label.form-check-label(for='input-invite-group-user')= t('User')
                .form-check.form-check-inline
                  input.form-check-input#input-invite-group-admin(type='radio', name='group', value='admin')
                  label.form-check-label(for='input-invite-group-admin')= t('Admin')
              button.btn.btn-block.btn-success.btn-lg(type="submit")= t('Send invitation')
    #modal-copy-invite.modal.fade(tabindex='-1', role='dialog', aria-labelledby='modal-copy-invite-title', aria-hidden='true')
      .modal-dialog.modal-lg(role='document')
        .modal-content
          .modal-header.text-center.d-block
            h4.modal-title.d-inline-block.ml-4#modal-copy-invite-title= t('Share invitation link')
            button(type='button', data-dismiss='modal', aria-label='Close').close
              span(aria-hidden='true') &times;
          .modal-body
            .input-group.input-group-lg
              input(type='text', readonly, value=`${config.urls.web}/my-account/domains/${domain.name}/invites`).form-control#invite-link
              .input-group-append
                button(type='button', data-toggle="clipboard", data-clipboard-target="#invite-link").btn.btn-primary
                  i.fa.fa-clipboard
                  = ' '
                  = t('Copy Invite Link')
  .container-fluid.pt-3
    .row
      .col
        include ../../_breadcrumbs
    .row
      if domain.group === 'admin'
        - const hasInvites = Array.isArray(domain.invites) && domain.invites.length > 0 && domain.plan === 'team'
        .col-12.mb-3
          .card
            h4.card-header= t('Manage Team')
            .card-body
              p.card-text= t('Members have shared access to this domain, and you can invite new members, remove existing members, or manage permissions for them below.')
              +planRequired(true)
              .table-responsive
                table.table.table-hover.table-bordered(class=hasInvites ? '' : 'mb-0')
                  thead.thead-dark
                    tr
                      th(scope='col')= t('Team Member')
                      th(scope='col').text-center= t('Alias Count')
                      if domain.members.length > 1
                        th(scope='col').text-center.text-md-left= t('Quick Links')
                  tbody
                    each member in domain.members
                      //- member.user (Object) and member.group (String)
                      //- member.user.id (String)
                      //- member.user.email (String)
                      tr
                        td.align-middle= member.user.email
                        td.align-middle.text-center
                          .h3.mb-0: span.badge.badge-pill.badge-dark.text-monospace.font-weight-normal= member.alias_count
                        if domain.members.length > 1
                          td.align-middle
                            ul.list-inline.mb-0
                              li.list-inline-item
                                form(action=l(`/my-account/domains/${domain.name}/members/${member.user.id}`), method='POST').ajax-form.confirm-prompt.d-inline-block
                                  input(type="hidden", name="_csrf", value=ctx.csrf)
                                  input(type='hidden', name='_method', value='PUT')
                                  input(type='hidden', name='group', value=member.group === 'admin' ? 'user' : 'admin')
                                  button(type='submit').btn.btn-dark= member.group === 'admin' ? t('Make User') : t('Make Admin')
                              //- if member.user.id !== user.id
                              li.list-inline-item
                                form(action=l(`/my-account/domains/${domain.name}/members/${member.user.id}`), method='POST').ajax-form.confirm-prompt.d-inline-block
                                  input(type="hidden", name="_csrf", value=ctx.csrf)
                                  input(type='hidden', name='_method', value='DELETE')
                                  button(type='submit').btn.btn-danger
                                    i.fa.fa-trash
                                    = ' '
                                    = t('Delete Member')
              if hasInvites
                p.card-text= t('Pending invitations are listed below.')
                .table-responsive
                  table.table.table-hover.table-bordered.mb-0
                    thead.thead-dark
                      tr
                        th(scope='col')= t('Email Address')
                        th(scope='col')= t('Group')
                        th(scope='col')= t('Quick Links')
                      tbody
                        each invite in domain.invites
                          tr
                            td.align-middle= invite.email
                            td.align-middle= titleize(invite.group)
                            td.align-middle
                              ul.list-inline.mb-0
                                //- copy invite link
                                li.list-inline-item
                                  button(type='button', data-toggle='modal', data-target='#modal-copy-invite').btn.btn-primary
                                    i.fa.fa-clipboard
                                    = ' '
                                    = t('Copy Invite Link')
                                //- delete invite
                                li.list-inline-item
                                  form(action=l(`/my-account/domains/${domain.name}/invites`), method='POST').ajax-form.confirm-prompt.d-inline-block
                                    input(type="hidden", name="_csrf", value=ctx.csrf)
                                    input(type='hidden', name='_method', value='DELETE')
                                    input(type='hidden', name='email', value=invite.email)
                                    button(type='submit').btn.btn-danger
                                      i.fa.fa-trash
                                      = ' '
                                      = t('Delete Invite')

            .card-footer.text-right
              //- TODO: this should be a right-clickable link with re-usable form in the modal (and modal-anchor)
              button(type='button', data-target='#modal-invite', data-toggle='modal').btn.btn-dark
                i.fa.fa-user-plus
                = ' '
                = t('Invite New Member')
      if domain.group === 'admin'
        .col-sm-12.col-md-6.mb-3
          form(action=ctx.path, method='POST').ajax-form.confirm-prompt.card
            input(type='hidden', name='_method', value='PUT')
            input(type="hidden", name="_csrf", value=ctx.csrf)
            h4.card-header= t('Custom SMTP Port Forwarding')
            .card-body
              .form-group.floating-label
                input#input-port(type='port', required, name='smtp_port', value=domain.smtp_port, placeholder=' ', aria-describedby='help-port').form-control
                label(for='input-port')= t('Port number (SMTP)')
              p.card-text: small#help-port.form-text.text-muted= t('Do not modify this unless you know what you are doing.  This will forward all emails to the specific port for all aliases and their recipients.  For example, if you are forwarding to info@example.com, and input port number 1337 here, then our server will forward email to example.com on port 1337 (as opposed to the standard SMTP port of 25).')
              +planRequired(false, false)
            .card-footer.text-right
              button(type='reset').btn.btn-secondary= t('Reset')
              button(type='submit').btn.btn-primary= t('Save')
      .col-sm-12.col-md-6.mb-3
        .card
          h4.card-header= t('Maximum Recipients Per Alias')
          .card-body
            p.card-text
              strong= t('Current Value:')
              = ' '
              if domain.max_recipients_per_alias <= 0
                = config.maxForwardedAddresses
              else
                = domain.max_recipients_per_alias
            +planRequired(false, false)
          .card-footer.text-right
            a(href=l('/help'), role='button', data-toggle='modal-anchor', data-target='#modal-help').btn.btn-dark= t('Contact us to increase')
      if domain.group === 'admin'
        .col-sm-12.col-md-6.mb-3
          .card
            h4.card-header= t('Current Plan')
            .card-body
              .btn-group
                button(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false').btn.btn-dark.dropdown-toggle
                  case domain.plan
                    when 'enhanced_protection'
                      i.fa.fa-fw.fa-shield
                      = ' '
                      = t('Enhanced Protection')
                    when 'team'
                      i.fa.fa-fw.fa-users
                      = ' '
                      = t('Team')
                    default
                      = t('Free')
                      = ' ('
                      = t('DNS-based')
                      = ')'
                .dropdown-menu
                  h6.dropdown-header.text-uppercase= t('Change plan to:')
                  each plan in [ 'free', 'enhanced_protection', 'team' ].filter(plan => plan !== domain.plan)
                    a(href=l(`/my-account/domains/${domain.name}/billing?plan=${plan}`)).dropdown-item
                      case plan
                        when 'enhanced_protection'
                          i.fa.fa-fw.fa-shield
                          = ' '
                          = t('Enhanced Protection')
                        when 'team'
                          i.fa.fa-fw.fa-users
                          = ' '
                          = t('Team')
                        default
                          = t('Free')
                          = ' ('
                          = t('DNS-based')
                          = ')'
                  .dropdown-divider
                  a(href=l(`/pricing?domain=${domain.name}`)).dropdown-item
                    small.text-muted= t('See all plan features')
      if domain.group === 'admin'
        .col-sm-12.col-md-6.mb-3
          .card
            h4.card-header= t('Delete Domain')
            .card-body
              = t('Deleting your domain is irreversable.  Please take extreme caution when deleting your domain.')
            .card-footer.text-right
              form(action=l(`/my-account/domains/${domain.name}`), method='POST').ajax-form.confirm-prompt
                input(type='hidden', name='_method', value='DELETE')
                input(type="hidden", name="_csrf", value=ctx.csrf)
                button(type='submit').btn.btn-danger
                  i.fa.fa-trash
                  = ' '
                  = t('Delete Domain')
    .row.text-center.my-5
      .col
        a(href=l(domain.group === 'admin' ? `/my-account/domains/${domain.name}` : '/my-account/domains')).btn.btn-outline-secondary
          i.fa.fa-angle-double-left
          = ' '
          = domain.group === 'admin' ? t('Back to Domain') : t('Back to Domains')
